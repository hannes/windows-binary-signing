on:
  push:
    branches: [main]

env:
  AZURE_CODESIGN_ENDPOINT: https://eus.codesigning.azure.net/
  AZURE_CODESIGN_ACCOUNT: duckdb-signing-2
  AZURE_CODESIGN_PROFILE: duckdb-certificate-profile


jobs:
  build-and-sign:
    runs-on: windows-latest
    name: Sign DuckDB using Azure
    steps:

      - name: Download
        shell: bash
        run: |
          curl -LOL https://github.com/duckdb/duckdb/releases/download/v1.2.0/duckdb_cli-windows-amd64.zip
          unzip duckdb_cli-windows-amd64.zip
          ls -la duckdb.exe

      - name: Sign files with Azure Trusted Signing (TM)
        uses: azure/trusted-signing-action@v0
        with:
          azure-tenant-id:              ${{ secrets.AZURE_CODESIGN_TENANT_ID }}
          azure-client-id:              ${{ secrets.AZURE_CODESIGN_CLIENT_ID }}
          azure-client-secret:          ${{  secrets.AZURE_CODESIGN_CLIENT_SECRET }}
          endpoint:                     ${{ env.AZURE_CODESIGN_ENDPOINT }}
          trusted-signing-account-name: ${{ env.AZURE_CODESIGN_ACCOUNT }}
          certificate-profile-name:     ${{ env.AZURE_CODESIGN_PROFILE }}
          files-folder:                 ${{ github.workspace }}
          files-folder-filter:          exe,dll
          files-folder-recurse:         true
          file-digest:                  SHA256
          timestamp-rfc3161:            http://timestamp.acs.microsoft.com
          timestamp-digest:             SHA256


      - name: Deploy
        shell: bash
        run: |
          choco install zip -y --force
          zip -j duckdb_cli-windows-amd64_signed.zip duckdb.exe


      - uses: actions/upload-artifact@v4
        with:
          name: duckdb-binaries-windows-amd64-signed
          path: |
            duckdb_cli-windows-amd64_signed.zip